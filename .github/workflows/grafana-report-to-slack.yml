name: Grafana Report to Slack

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:       # Allow manual trigger

jobs:
  send_report:
    runs-on: ubuntu-latest

    steps:
      - name: Ensure github-actions-example folder exists
        run: mkdir -p github-actions-example

      - name: Render Grafana Dashboard Panel
        id: render
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GRAFANA_SERVICEACCOUNT_TOKEN }}" \
            -o panel.png \
            "https://${{ vars.GRAFANA_INSTANCE }}.grafana.net/render/d-solo/${{ vars.GRAFANA_DASHBOARD_ID }}?panelId=1&width=1000&height=500&tz=UTC"
          echo "Rendered panel saved as panel.png: $(ls -lh panel.png)"
        working-directory: github-actions-example

      - name: Get Slack upload URL
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ vars.SLACK_CHANNEL_ID }}
        id: get_upload_url
        run: |
          FILESIZE=$(stat -c%s panel.png)
          response=$(curl -s -X POST "https://slack.com/api/files.getUploadURLExternal" \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json; charset=utf-8" \
            -d '{"filename": "panel.png","length": $FILESIZE}')
          echo "upload_url=$(echo $response | jq -r '.upload_url')" >> $GITHUB_OUTPUT
          echo "file_id=$(echo $response | jq -r '.file_id')" >> $GITHUB_OUTPUT
          echo "Upload URL: ${{ steps.get_upload_url.outputs.upload_url }}"
          echo "File ID: ${{ steps.get_upload_url.outputs.file_id }}"
          echo "Response: $response"
        working-directory: github-actions-example

      - name: Upload Image to Slack
        run: |
          echo "Upload URL: ${{ steps.get_upload_url.outputs.upload_url }}"
          curl -s -X POST \
            -F file=@panel.png \
            "${{ steps.get_upload_url.outputs.upload_url }}"
        working-directory: github-actions-example

      - name: Complete Slack file upload
        run: |
          curl -s -X POST "https://slack.com/api/files.completeUploadExternal" \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"files":[{
              "id":"'"${{ steps.get_upload_url.outputs.file_id }}"'",
              "channels":["'"$SLACK_CHANNEL_ID"'"]
            }]}'
        working-directory: github-actions-example
