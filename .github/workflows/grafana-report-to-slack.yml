name: Grafana Report to Slack

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:       # Allow manual trigger

jobs:
  send_report:
    runs-on: ubuntu-latest

    steps:
      - name: Ensure github-actions-example folder exists
        run: mkdir -p github-actions-example

      - name: Render Grafana Dashboard Panel
        id: render
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GRAFANA_SERVICEACCOUNT_TOKEN }}" \
            -o panel.png \
            "https://${{ vars.GRAFANA_INSTANCE }}.grafana.net/render/d-solo/${{ vars.GRAFANA_DASHBOARD_ID }}?panelId=1&width=1000&height=500&tz=UTC"
        working-directory: github-actions-example

      - name: Upload Image to Slack (External Upload)
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL_ID: ${{ vars.SLACK_CHANNEL_ID }}
        run: |
          # 1. Request an upload URL
          response=$(curl -s -X POST "https://slack.com/api/files.getUploadURLExternal" \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"filename":"panel.png","length":'$(stat -c%s panel.png)',"channels":["'"$SLACK_CHANNEL_ID"'"]}')
          upload_url=$(echo "$response" | jq -r '.upload_url')
          file_id=$(echo "$response" | jq -r '.file_id')

          # 2. Upload the file to the returned URL
          curl -s -X PUT -T panel.png -H "Content-Type: application/octet-stream" "$upload_url"

          # 3. Complete the upload
          curl -s -X POST "https://slack.com/api/files.completeUploadExternal" \
            -H "Authorization: Bearer $SLACK_BOT_TOKEN" \
            -H "Content-Type: application/json" \
            --data '{"files":[{"id":"'"$file_id"'"}], "channels":["'"$SLACK_CHANNEL_ID"'"]}'
        working-directory: github-actions-example
