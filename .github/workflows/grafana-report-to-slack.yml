name: Grafana Report to Slack

permissions:
  contents: write

on:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours
  workflow_dispatch:       # Allow manual trigger

jobs:
  send_report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Ensure github-actions-example folder exists but is empty
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: | 
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git rm -rf github-actions-example/* || true # Remove any existing files in the folder
          git commit -m "Ensure github-actions-example folder is empty" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/wcall/GrafanaReportToSlackGitHubAction.git
          git push origin HEAD
          mkdir -p github-actions-example

      - name: Render Grafana Dashboard Panel
        id: render
        run: |
          curl -s -H "Authorization: Bearer ${{ secrets.GRAFANA_SERVICEACCOUNT_TOKEN }}" \
            -o panel.png \
            "https://${{ vars.GRAFANA_INSTANCE }}.grafana.net/render/d-solo/${{ vars.GRAFANA_DASHBOARD_ID }}?panelId=${{ vars.GRAFANA_PANEL_ID }}&width=1000&height=500&tz=UTC"
          echo "Rendered panel saved as panel.png: $(ls -lh panel.png)"
        working-directory: github-actions-example

      - name: Commit and push panel.png to repository
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add github-actions-example/panel.png
          git commit -m "Update panel.png from workflow run" || echo "No changes to commit"
          git remote set-url origin https://x-access-token:${GH_PAT}@github.com/wcall/GrafanaReportToSlackGitHubAction.git
          git push origin HEAD
        

      - name: Output panel.png permalink
        id: get_permalink_url
        run: |
          sleep 10  # Wait for the commit to propagate
          permalink_url="https://github.com/${GITHUB_REPOSITORY}/blob/${GITHUB_REF_NAME}/github-actions-example/panel.png?raw=true"
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
          echo "GITHUB_REF_NAME: ${GITHUB_REF_NAME}"
          echo "Permalink: $permalink_url"
          echo "permalink_url=$permalink_url" >> $GITHUB_OUTPUT

      - name: Send Slack Message via Webhook
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
          SLACK_CHANNEL: 'demos'
          SLACK_USERNAME: 'wcall'
          SLACK_ICON_EMOJI: ':grafana:'
          SLACK_TITLE: 'Checkout - Success Rate SLO Remaining Error Budget'
          SLACK_MESSAGE: "Here is the panel image for Checkout - Success Rate SLO's Remaining Error Budget:"
          SLACK_FILE_UPLOAD: github-actions-example/panel.png
          SLACK_CUSTOM_PAYLOAD: |
            {
              "attachments": [
                {
                  "fallback": "Checkout - Success Rate SLO Remaining Error Budget (panel image)",
                  "image_url": "${{ steps.get_permalink_url.outputs.permalink_url }}",
                  "title": "Checkout - Success Rate SLO Remaining Error Budget",
                  "text": "Here is the panel image for Checkout - Success Rate SLO's Remaining Error Budget:"
                }
              ]
            }
          